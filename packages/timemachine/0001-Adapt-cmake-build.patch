From 5886dc138c77671e7b9b455a91a18e8232acaec5 Mon Sep 17 00:00:00 2001
From: Matt Wittmann <mwittmann@relaytx.com>
Date: Mon, 6 Mar 2023 08:09:00 -0800
Subject: [PATCH 1/2] Adapt cmake build

* Use deps from nix

* Parameterize python version

* Remove CUDA_ARCH setting

* Remove -Werror (warnings from eigen)
---
 timemachine/cpp/CMakeLists.txt | 26 ++++----------------------
 1 file changed, 4 insertions(+), 22 deletions(-)

diff --git a/timemachine/cpp/CMakeLists.txt b/timemachine/cpp/CMakeLists.txt
index a1de748e..f8a69355 100644
--- a/timemachine/cpp/CMakeLists.txt
+++ b/timemachine/cpp/CMakeLists.txt
@@ -9,6 +9,9 @@ find_package(Python 3.10...3.12.8 COMPONENTS Interpreter Development REQUIRED)
 
 set(PYBIND11_PYTHON_VERSION ${Python_VERSION} CACHE STRING "Which version of python we're building wrappers against")
 
+find_package(Eigen3 3.4 REQUIRED NO_MODULE)
+find_package(pybind11)
+
 set(DEBUG_BUILD "$ENV{DEBUG_BUILD}")
 
 set(COMMON_COMPILER_FLAGS "-Wall -Wextra")
@@ -19,7 +22,6 @@ else()
 endif()
 
 
-string(APPEND CMAKE_CXX_FLAGS "${COMMON_COMPILER_FLAGS} -Werror")
 string(APPEND CMAKE_CUDA_FLAGS "${COMMON_COMPILER_FLAGS}")
 
 string(APPEND CMAKE_CUDA_FLAGS
@@ -41,19 +43,6 @@ if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
 endif()
 
 set(LIBRARY_NAME custom_ops)
-set(PYBIND_SRC_DIR pybind11)
-
-if(NOT EXISTS ${PYBIND_SRC_DIR})
-  execute_process(COMMAND git clone --depth 1 --branch v2.9.2 https://github.com/pybind/pybind11.git ${PYBIND_SRC_DIR})
-endif()
-
-set(EIGEN_SRC_DIR eigen)
-if(NOT EXISTS ${EIGEN_SRC_DIR})
-  execute_process(COMMAND git clone --depth 1 --branch 3.3.9 https://gitlab.com/libeigen/eigen.git ${EIGEN_SRC_DIR})
-endif()
-
-add_subdirectory(${CMAKE_CURRENT_BINARY_DIR}/${PYBIND_SRC_DIR} ${CMAKE_CURRENT_BINARY_DIR}/${PYBIND_SRC_DIR})
-
 
 # Disable warnings on vendored files
 file(
@@ -128,17 +117,10 @@ pybind11_add_module(${LIBRARY_NAME} SHARED NO_EXTRAS
 
 include_directories(src/kernels)
 include_directories(SYSTEM ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
-include_directories(SYSTEM ${CMAKE_CURRENT_BINARY_DIR}/${EIGEN_SRC_DIR})
+include_directories(${EIGEN3_INCLUDE_DIRS})
 
 set_property(TARGET ${LIBRARY_NAME} PROPERTY CUDA_STANDARD 17)
 
-if (NOT CUDA_ARCH)
-  set(CUDA_ARCH "native")
-endif()
-message("Cuda Arch: " ${CUDA_ARCH})
-set_property(TARGET ${LIBRARY_NAME} PROPERTY CUDA_ARCHITECTURES "${CUDA_ARCH}")
-unset(CUDA_ARCH CACHE)
-
 target_link_libraries(${LIBRARY_NAME} PRIVATE -lcurand)
 set_target_properties(${LIBRARY_NAME} PROPERTIES PREFIX "")
 
-- 
2.47.1

